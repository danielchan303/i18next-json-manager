[{"C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\index.js":"1","C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\App.js":"3","C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\store\\store.ts":"4","C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\component\\Row.jsx":"5","C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\store\\models\\i18n.js":"6"},{"size":623,"mtime":1607732326932,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607700843172,"results":"9","hashOfConfig":"8"},{"size":4868,"mtime":1607941703174,"results":"10","hashOfConfig":"8"},{"size":390,"mtime":1607732139083,"results":"11","hashOfConfig":"8"},{"size":3461,"mtime":1607916025685,"results":"12","hashOfConfig":"8"},{"size":1620,"mtime":1607788142336,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1mz5b5s",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\index.js",[],["29","30"],"C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\App.js",["31"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Row from \"./component/Row\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const i18n = useSelector(state => state.i18n);\n\n  const createNewMainKey = () => {\n    const key = prompt(\"Enter the new key name: \");\n    if (key) {\n      dispatch.i18n.createNewMainKey({ key });\n    }\n  };\n\n  const changeMainKeyName = (key, value) => {\n    dispatch.i18n.changeMainKeyName({ key, value });\n  };\n\n  const deleteMainKey = key => {\n    dispatch.i18n.deleteMainKey({ key });\n  };\n\n  const createNewNestedKey = key => {\n    const nestedKey = prompt(\"Enter the new nested key name: \");\n    if (nestedKey) {\n      dispatch.i18n.newNestedKey({ key, nestedKey });\n    }\n  };\n\n  const updateNestedKey = (mainKey, nestedKey, newNestedKey) => {\n    dispatch.i18n.updateNestedKey({ mainKey, nestedKey, newNestedKey });\n  };\n\n  const updateNestedKeyValue = ({ key, nestedKey, language, value }) => {\n    dispatch.i18n.updateNestedKeyValue({ key, nestedKey, language, value });\n  };\n\n  const deleteNestedKeyValue = (key, nestedKey) => {\n    const response = prompt(\"Are you sure to delete? type 'yes' to cofirm\");\n    if (response === \"yes\") {\n      dispatch.i18n.deleteNestedKeyValue({ key, nestedKey });\n    }\n  };\n\n  const getLangJSON = language => {\n    const output = {};\n    for (let [mainKey, mainValue] of Object.entries(i18n)) {\n      const subObj = {};\n      for (let [nestedKey, nestedObj] of Object.entries(mainValue)) {\n        subObj[nestedKey] = nestedObj[language];\n      }\n      output[mainKey] = subObj;\n    }\n    return JSON.stringify({ translation: output }, undefined, 4);\n  };\n\n  const output = getLangJSON(\"tc\");\n  console.log(\"output\", output);\n\n  const backupRef = React.useRef();\n  const enRef = React.useRef();\n  const tcRef = React.useRef();\n  const scRef = React.useRef();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 id=\"heading\">i18n Manager</h1>\n        <div>\n          <button className=\"header-button\" onClick={createNewMainKey}>\n            Add main category\n          </button>\n          <button\n            className=\"header-button\"\n            onClick={() => {\n              const backup = prompt(\"Input the backup below\");\n              if (backup) {\n                dispatch.i18n.importFromBackup(JSON.parse(backup));\n              }\n            }}\n          >\n            Import\n          </button>\n          <button\n            className=\"header-button\"\n            onClick={() => {\n              backupRef.current.click();\n              enRef.current.click();\n              tcRef.current.click();\n              scRef.current.click();\n            }}\n          >\n            Download\n          </button>\n        </div>\n      </header>\n      <main>\n        <div className=\"card horizontalRow\">\n          <a\n            ref={backupRef}\n            style={{ display: \"none\" }}\n            href={\n              \"data:text/plain;charset=utf-8,\" +\n              encodeURIComponent(JSON.stringify(i18n))\n            }\n            download=\"backup.json\"\n          >\n            Backup\n          </a>\n          <a\n            ref={enRef}\n            style={{ display: \"none\" }}\n            href={\n              \"data:text/plain;charset=utf-8,\" +\n              encodeURIComponent(getLangJSON(\"en\"))\n            }\n            download=\"en.json\"\n          >\n            EN\n          </a>\n          <a\n            ref={tcRef}\n            style={{ display: \"none\" }}\n            href={\n              \"data:text/plain;charset=utf-8,\" +\n              encodeURIComponent(getLangJSON(\"tc\"))\n            }\n            download=\"tc.json\"\n          >\n            TC\n          </a>\n          <a\n            ref={scRef}\n            style={{ display: \"none\" }}\n            href={\n              \"data:text/plain;charset=utf-8,\" +\n              encodeURIComponent(getLangJSON(\"sc\"))\n            }\n            download=\"sc.json\"\n          >\n            SC\n          </a>\n        </div>\n        <div className=\"card\">\n          <div>\n            <Row\n              i18n={i18n}\n              changeMainKeyName={changeMainKeyName}\n              deleteMainKey={deleteMainKey}\n              createNewNestedKey={createNewNestedKey}\n              updateNestedKey={updateNestedKey}\n              updateNestedKeyValue={updateNestedKeyValue}\n              deleteNestedKeyValue={deleteNestedKeyValue}\n            />\n          </div>\n        </div>\n        <div className=\"card\">\n          <h2>Output</h2>\n          <p>{JSON.stringify(i18n)}</p>\n          <h3>en</h3>\n          <p>{getLangJSON(\"en\")}</p>\n          <h3>tc</h3>\n          <p>{getLangJSON(\"tc\")}</p>\n          <h3>sc</h3>\n          <p>{getLangJSON(\"sc\")}</p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\store\\store.ts",[],["32","33"],"C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\component\\Row.jsx",[],"C:\\Users\\danie\\Desktop\\i18n-Project\\my-app\\src\\store\\models\\i18n.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]